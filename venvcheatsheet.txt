# get a list of globally installed 
# pip modules
pip3 list

# create a new venv
python3 -m venv project_env

# activate it
source project_env/bin/activate

# ask the systm where it is going to find python environment
which python  ## /home/keith/ndev/project_env/bin/python

# within the activated environment you can use pip or pip3 it seems
pip list  # there's a format warning that I'll need to deal with eventually

# pip list shows that there are only 3 modules installed
# pip (9.0.1)
# pkg-resources (0.0.0)
# setuptools (39.0.1)


# install a few packages

pip install requests
pip install pytz

pip list
# pip list now shows that the original 3 
# plus the 2 new ones and any dependency
# packages

# certifi (2019.11.28)
# chardet (3.0.4)
# idna (2.8)
# pip (9.0.1)
# pkg-resources (0.0.0)
# pytz (2019.3)
# requests (2.22.0)
# setuptools (39.0.1)
# urllib3 (1.25.7)

# pip freeze puts the list in a format
# that requirements.txt can use
pip freeze

# certifi==2019.11.28
# chardet==3.0.4
# idna==2.8
# pkg-resources==0.0.0
# pytz==2019.3
# requests==2.22.0
# urllib3==1.25.7

# we can redirect pip freezes output directly
# into the requirements.txt file
pip freeze > requirements.txt

# deactivate the current venv
deactivate

# remove the virtual environment
rm -rf project_env/

# common practice is to store the virtual
# environment in the project directory as venv
# i.e. dev/my_project/venv

mkdir my_project
python3 -m venv my_project/venv
source my_project/venv/bin/activate

# install modules into the virtual environment
# using a requirements.txt file
pip install -r requirements.txt

# When placing the venv in the project folder
# 1) don't place any source files in the that directory
# put them in the root or other subdirectories.
# 2) make sure that if you are using source control
# that you set it up to ignore anything in the venv 
# directory.
# 3) what you should commit to source control is
# the requirements.txt file. 

# create an environment with access to system 
# packages
# first get rid of the other environment
deactivate
cd my_project
rm -rf venv/

# create the environment and call it venv
# remember we are currently in my_project
python3 -m venv venv --system-site-packages
source venv/bin/activate

# show only the locally installed files
pip list --local

# works for pip freeze as well
pip freeze --local




